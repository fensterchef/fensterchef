# C compiler
CC := gcc

# Packages
PACKAGES := x11 xrandr xcursor xft fontconfig

# Compiler flags #-Werror
DEBUG_FLAGS := -DDEBUG -g -fsanitize=address -pg -Werror
# Also include freetype2 which is needed for Xft headers to work
C_FLAGS := -Iinclude -std=c99 \
		   $(shell pkg-config --cflags $(PACKAGES) freetype2) \
           -Wall -Wextra -Wpedantic -Wno-format-zero-length
RELEASE_FLAGS := -O3

# Libraries
C_LIBS := $(shell pkg-config --libs $(PACKAGES))

# Installation paths
LICENSE := /usr/share/licenses/fensterchef
BINARY := /usr/bin/fensterchef
MANUAL_PAGE_1 := /usr/share/man/man1/fensterchef.1.gz
MANUAL_PAGE_5 := /usr/share/man/man5/fensterchef.5.gz

# Sandbox parameters
SANDBOX_DISPLAY := 8
SANDBOX := Xephyr :$(SANDBOX_DISPLAY) +extension RANDR -br -ac -noreset -screen 800x600

# Find all source files
SOURCES := $(shell find src -name '*.c')
# Get all corresponding object paths
OBJECTS := $(patsubst src/%.c,build/%.o,$(SOURCES))
# Get all include files
INCLUDES := $(shell find include -name '*.h')

# Get dependencies
DEPENDENCIES := $(patsubst %.o,%.d,$(OBJECTS))

.PHONY: default
default: build

# Include dependencies (.d files) generated by gcc
-include $(DEPENDENCIES)
# Build each object from corresponding source file
build/%.o: src/%.c
	mkdir -p $(dir $@)
	$(CC) $(DEBUG_FLAGS) $(C_FLAGS) -c $< -o $@ -MMD

# Build the main executable from all object files
build/fensterchef: $(OBJECTS)
	mkdir -p $(dir $@)
	$(CC) $(DEBUG_FLAGS) $(C_FLAGS) $(OBJECTS) -o $@ $(C_LIBS)

# Manual pages
release/fensterchef.1.gz: man/fensterchef.1
	mkdir -p release
	gzip --best -c man/fensterchef.1 >$@

release/fensterchef.5.gz: man/fensterchef.5
	mkdir -p release
	gzip --best -c man/fensterchef.5 >$@

# Release executable
release/fensterchef: $(SOURCES) $(INCLUDES)
	mkdir -p release
	gcc $(RELEASE_FLAGS) $(C_FLAGS) $(SOURCES) -o release/fensterchef $(C_LIBS)

# Functions
.PHONY: build sandbox release install uninstall clean

build: build/fensterchef

sandbox: build
	$(SANDBOX) &
	# wait for x server to start
	sleep 1
	DISPLAY=:$(SANDBOX_DISPLAY) gdb -ex run --args ./build/fensterchef --verbose
	pkill Xephyr

release: release/fensterchef.1.gz release/fensterchef.5.gz release/fensterchef

install: release
	install -Dm644 -t $(dir $(LICENSE))       LICENSE.txt
	install -D     -t $(dir $(BINARY))        release/fensterchef
	install -Dm644 -t $(dir $(MANUAL_PAGE_1)) release/fensterchef.1.gz
	install -Dm644 -t $(dir $(MANUAL_PAGE_5)) release/fensterchef.5.gz

uninstall:
	rm -r $(LICENSE)
	rm $(BINARY)
	rm $(MANUAL_PAGE_1)
	rm $(MANUAL_PAGE_5)

clean:
	rm -rf build
	rm -rf release
