[Tasks]
#51/#8 ! Fix fixed size fonts messing up
    Fixed size fonts like emoji fonts are not scaled and it looks very weird

#66 Always focus window above frames
    When a frame is focused and there is a window covering the monitor the frame
    is on, that window should be focused. If none is covering the monitor more
    than the configured percentage, there is still an attempt to focus the above
    floating window if the focused frame is empty.

#68 ...

#1000 Make a wayland port
    Make an additional repository that hosts fensterchef-wayland

[In Progress]
#14 Generate documentation
    Make shell scripts to generate the manual page (should the wiki be
    continued?)

#64 Add variables to scripting
    Add two keywords let (local variable) and set (global variable).

[Recheck]
#1 ! Hover events not working in firefox sometimes
    This is fixed by resizing the window, try to find out why it happens in the
    first place and when it happens

#8 ? Improve font rendering once again
    Is there any way to make colored emojis work? Is artifical scaling needed?

#10 ? Add frame indication for empty frames
    Make it so empty frames have a border indicating focus

#13 ! Unable to reload configuration after an error
    When reloading the configuration and an error was detected the bind for
    reloading no longer works. It works on an initial load if the parser fails

#18 ! No window in focus after toggling fullscreen
    When putting a window out of fullscreen and put into the focus frame, in
    some circumstances it can happen that no window has focus now

#20/#10 ? Make extra window for empty frames
    ?? Extra translucent border windows have to be shown

#34 ? Think about how numbers should be handled when stashing

#37 ? Add hooks
    When certain events occur like showing a window, the user should be able to
    make a hook for an alternative action that should occur (instead of the
    default of focusing this window)
    This is implemented but only for mapping windows for the first time

#39 ? Add the set action that can set a variable
    The set action would have the syntax `set <section>.<name> = <value>` and
    dynamically reload the part of the configuration that is relevant

#43 ? Make perfect focus management
    Make it so the focus can not be broken by focus_thief.
    Make a proper design in your head how focus can be managed. The difficulty
    is that override redirect windows can have focus.

#45 ! Fix weird flicker of Steam window
    Steam flickers back and forth (once) when hovering over a menu item

#59 ? Make it run more than startup actions using external command
    Right now using -e, only actions can be sent. Make it so entire
    configurations can be sent. This is helpful when setting a specific layout

#24 ! Monitor frames wrong when screen size changes
    Exactly in what circumstances this bug appears is not known but running
    randfix.sh gets a window in a bugged state, this might have to do with
    stashing away frames. randfix.sh looks like:
    ```
    #!/bin/bash

    MON1=HDMI-A-0
    MON2=DVI-D-1

    xrandr --output $MON1 --off
    xrandr --output $MON2 --off
    xrandr --output $MON2 --auto
    xrandr --output $MON1 --auto
    xrandr --output $MON1 --right-of $MON2
    xrandr --output $MON1 --primary
    xrandr --output $MON1 --dpi 96
    xrandr --output $MON2 --dpi 96
    ```
    No window gets in a bugged state it seems anymore. This is just a poor
    script to reconfigure the monitors.

#63 ? Replace deletion of atom with setting of another
    When a command is sent via the FENSTERCHEF_COMMAND atom, it is currently
    deleted. Instead, set FENSTERCHEF_RETURN on the window.

#25 ? Make string arguments more shell like
    One should be able to specify in quotes: "what is here ".
    So if a line starts with `"`, then this should be interpreted as string.
    Also this can be escaped as well as ';' with a backslash.

[Trash]

[Done]
#9 Add maintainability macros
    Add macros that highly improve the maintainability

#12 ! Fullscreen window does not get out of fullscreen
    Fullscreen windows can not be put out of fullscreen when they are
    initially in such state

#3 Equalize action
    Make an action that equalizes all frames within the selected frame

#6 ! Issues when clicking to focus with --transparent
    Some applications (like firefox or CS2) have an unexpected behaviour
    together with such a mouse bind

#16 Consider what windows receive input focus and initial state
    Read the book and check what windows should receive input and consider the
    initial state

#17 Center floating windows and ignore their position size hints
    Pretty much what the title says

#11 Add inactive border
    When a floating window is focused, the frame that lost focus should get a
    different color indicating it is the currently focused frame

#19 Show current frame indicator options
    Now the current frame indicator is shown more sensibly

#21 Add desktop window mode
    This window is always in the background

#22 ! Window does not get focus
    Windows with he WM_TAKE_FOCUS protocol should fuck right off because they do
    not even take focus, the input flag needs to be considered here instead

#23 ! Windows not supposed to have a border get a border upon configuration reload
    Exactly the title

#26 Add optional arguments
    Let some actions have optional arguments. If they expect an integer and no
    number is given, the number `1` should be implied.

#2 Ratio for frames
    Add a ratio to a frame so that the sizes are resistent to when they become
    very tiny. Use this to automatically resize back when clearing child

#27 ! Make focus checking more sensible
    Make checking if a window is focusable or not more sensible

#15 Add auto split option
    Add an option in the configuration so that when a new window spawns, the
    current frame is split automatically

#28 ! Old focus is set to pointer
    These pointers might be freed and reallocated. The address may not change so
    the program does not know if any pointer changed
    Solution 1: Reference count
    Solution 2 (better I think): Set the old focus to NULL when these objects
    are freed

#29 ! Errors are shown after window is destroyed
    When a window is destroyed, sometimes errors are thrown by xcb that should
    be addressed.
    This will not be fixed because it is effort for pretty much no return.

#5 Add frame numbers and assignment
    Frames should be able to hold onto specific windows. When these specific
    windows are hidden and then shown again, they should reappear in the same
    place, this could also be used to make initial layouts, maybe like:
    ```
    [startup]
    split-horizontally
    assign 1
    focus-right
    assign 2
    run st -n 1
    run firefox

    [assignment]
    first-window-number 1000
    1 1 ; st-256color
    2 [Nn]avigator ; [Ff]irefox
    999 * ; [Dd]iscord

    # And a bind to open discord on the current frame (even when moving away):
    [keyboard]
    Super+1 focus-frame 999

    Super+d assign 999 ; run discord
    ```

#32 Make additional action for hinting split direction
    It was not a good idea to change the split action, revert the change!!
    And then make an additional action for hinting.

#31 ! Floating window toggle not removing void if configured
    When auto-remove-void is configured, then making a window floating should
    remove the gap it leaves, similar for auto-remove

#33 ! Exchange into empty frame
    When exchanging into an empty frame, it feels unnatural when some
    configuration options are turned on

#30 Find a better monitor to center floating windows
    Right now the existing geometry of the window is used to determine the
    monitor to center the window in. Use the focus_frame/focus_window

#35 ! Fix auto equalization of frames
    Too many frames are equalized when auto-equalize is enable. It needs to move
    up to the correct parent frame and not to the root!

#4 Add cursor management and resource management
    Handle the setting of the cursor and manage X resources

#36 Add way to inject commmands
    Do it how ratpoison does it which is quite sensible: Create a window with
    the FENSTERCHEF_COMMAND property which contains a list of actions to execute

#38 Add keycodes to binds
    When a number is used instead of a word starting with a letter for a key
    symbol, interpret it as a keycode

#40 Add parser include command
    There should be an identifier usable in any label that includes another
    configuration file

#41 Add actions to assignments
    Add actions to the end of assignments that are executed when a window
    receives the window number

#42 Better position for floating windows/dock windows
    When two dock windows appear on the same edge, they currently overlap.
    Improve this. And then two floating windows spawn, they are completely
    covering each over. Add an offset like Windows. Maybe add a configurable
    option for how large floating windows should be?

#44 Handle the add of _NET_WM_STATE_MAXIMIZED_HORZ
    The steam window uses this to maximize itself.

#48 Add move actions
    Add actions to move windows

#46 Add "other" action
    This action should pop a frame from the space and replace it with the
    current frame

#47 Add left/top split actions
    These actions should split like usually but in the other direction

#53 ! Numbers assigned wrongly
    When there are no assignments, windows are not number starting from the
    configured first-window-number

#49 Make refocus more natural when a window is hidden
    When a non tiling window is hidden, the focus may move to a different
    monitor which is unnatural

#52 ! Let more frames tank size
    When resizing a frame, let it push frames

#54 Handle overlapping monitors
    When monitors overlap, one should be ignored

#55 Add center-to action
    This action should center a window to a specific monitor by name (glob
    pattern)

#56 Add resize-to action
    This action should set the size and position of a window relative to the
    monitor it is on

#60 Add core fonts
    Use core fonts as a fallback font

#61 Add reference counts to window and frame
    This will allow to clean up a lot of code

#50 ! The default of pressing MiddleButton to close a window
    When doing this, the below window gets the event as well

#62 ! Window mapping again not raised
    When a window is shown through a map request for the second time and
    focused, it is not raised

#57 Make higher scripting capabilities
    Actions already return true or false, I made this for the future. This is an
    example of an advanced fensterchef configuration:
    ```
    [assignment]
    1000 toggling ; st-256color ; toggle-tiling

    [startup]
    run st -n toggling

    [keyboard]
    z focus-window 1000 && (
       center-to *
       resize-to 0 0 800 600
    ) || minimize-window 1000
    ```
    This puts a terminal window in the background whose visibility can be
    toggled by pressing Z. When showing the window, it is sized to 2/5 of the
    monitors area.
    So expressions would need to be added which replaces the action lists.

#58 Add dumping of a frame layout
    This should dump a layout to a file, maybe it should be a fensterchef
    configuration file that one can include

#65 ! Fix infinite recursion when a modal dialog is raised
    When I opened a dialog window that is modal to firefox, put it to tiling
    and then focused firefox, fensterchef stopped working

#67 ! GVim is not rendering properly
    If GVim is spawned, it does not render properly, it is just black.
    Resizing windows however fixes the issue.
    Solution: Send a fake configure notify event to the window so that it stays
    in a valid state

#7 ! Discord hides itself again on WM_CHANGE_STATE
    When starting Discord, it sometimes hides itself again
    Try to check electron source code I guess... I do not know if it was made
    using electron actually. Is this on purpose?? I believe it is.
    Using WM_STATE I believe fixed this bug.
