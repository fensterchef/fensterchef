# C compiler
CC := cc

# Packages
PACKAGES := x11 xrandr xcursor xft fontconfig

# Compiler flags
C_FLAGS := -std=c99 -Iinclude -Iinclude/core \
           -Wall -Wextra -Wpedantic -Wno-format-zero-length \
           $(shell pkg-config --cflags $(PACKAGES))
DEBUG_FLAGS := -DDEBUG -g -fsanitize=address -pg -Werror $(C_FLAGS)

# Libraries
C_LIBRARIES := $(shell pkg-config --libs $(PACKAGES))

# Sandbox parameters
SANDBOX_DISPLAY := :8
SANDBOX := Xephyr $(SANDBOX_DISPLAY)

# Find all source files
SOURCES := $(shell find src -name '*.c')
# Get all corresponding object paths
OBJECTS := $(patsubst src/%.c,build/%.o,$(SOURCES))
# Get all include files
INCLUDES := $(shell find include -name '*.h')

# Get dependencies
DEPENDENCIES := $(patsubst %.o,%.d,$(OBJECTS))

.PHONY: default
default: build

# Include dependencies (.d files) generated by gcc
-include $(DEPENDENCIES)
# Build each object from corresponding source file
build/%.o: src/%.c
	mkdir -p $(dir $@)
	$(CC) $(DEBUG_FLAGS) -c $< -o $@ -MMD

# Build the main executable from all object files
build/fensterchef: $(OBJECTS)
	mkdir -p $(dir $@)
	$(CC) $(DEBUG_FLAGS) $(OBJECTS) -o $@ $(C_LIBRARIES)

# Functions
.PHONY: build sandbox clean

build: build/fensterchef

sandbox: build
	$(SANDBOX) &
	# wait for x server to start
	sleep 1
	DISPLAY=$(SANDBOX_DISPLAY) ./build/fensterchef --verbose
	pkill Xephyr

gdb-sandbox: build
	$(SANDBOX) &
	# wait for x server to start
	sleep 1
	DISPLAY=$(SANDBOX_DISPLAY) gdb -ex run --args ./build/fensterchef --verbose
	pkill Xephyr

clean:
	find build/ -not -name build -a -not -name GNUmakefile -delete
